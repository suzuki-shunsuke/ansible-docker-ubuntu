---
# tasks file for docker-ubuntu
# https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/
- name: uninstall old versions
  apt:
    name: "{{item}}"
    state: absent
    update_cache: yes
  with_items:
  - docker
  - docker-engine
  - docker.io
- name: install recommended extra packages for Trusty 14.04
  apt:
    name: "{{item}}"
    update_cache: yes
    install_recommends: no
  with_items:
  - linux-image-extra-{{ansible_kernel}}
  - linux-image-extra-virtual
  # http://docs.ansible.com/ansible/latest/playbooks_tests.html#version-comparison
  when: ansible_distribution_version|version_compare('14.04', '==')
- name: install packages to allow apt to use a repository over HTTPS
  apt:
    name: "{{item}}"
    update_cache: yes
    install_recommends: no
  with_items:
  - apt-transport-https
  - ca-certificates
  - curl
  - software-properties-common
- name: add Dockerâ€™s official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
- name: set up the stable repository
  apt_repository:
    repo: "deb [arch={{docker_ubuntu_archs[ansible_architecture]}}] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable"
  when: ansible_architecture in docker_ubuntu_archs
- name: install docker-ce
  apt:
    name: docker-ce{{(docker_version == 'latest')|ternary('', '-{}'.format(docker_version))}}
    update_cache: yes
    install_recommends: no
- name: add users to the docker group
  user:
    name: "{{item}}"
    groups: docker
    append: yes
  with_items: "{{docker_users}}"
- name: change the status of the docker daemon
  service:
    name: docker
    state: "{{docker_state}}"
  when: docker_state is not undefined
- name: make docker daemon enabled or disabled
  service:
    name: docker
    enabled: "{{docker_enabled}}"
  when: docker_enabled is not undefined
